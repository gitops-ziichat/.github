name: Release
description: Tags Docker image and creates a GitHub release

inputs:
  sha:
    description: The commit SHA to tag
    required: true
  version:
    description: The version to release
    required: true
  image:
    description: The image name without tag (e.g. ghcr.io/org/repo)
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up Git
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git fetch --tags --force

    - name: Check and Create Git Tag Release
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
        SHA: ${{ inputs.sha }}
      run: |
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "✅ Git tag v$VERSION already exists. Skipping tagging."
        else
          echo "🏷️ Creating Git tag v$VERSION..."
          git tag -a "v$VERSION" "$SHA" -m "Release v$VERSION"
          git push origin "v$VERSION"
        fi
    
    - name: Create GitHub Release
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
        SHA: ${{ inputs.sha }}
        VERSION: ${{ inputs.version }}
      run: |
        echo "🔖 Creating GitHub release for v${VERSION}..."
        if gh release view "v${VERSION}" > /dev/null 2>&1; then
          echo "✅ Release v${VERSION} already exists. Skipping release step."
        else
          gh release create "v${VERSION}" \
            --title "Version ${VERSION}" \
            --notes "Released via GitHub Actions" \
            --target "$SHA"
        fi

    