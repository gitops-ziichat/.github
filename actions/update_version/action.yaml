name: Update Version
description: Updates the version within the source code per the language detected

inputs:
  version:
    description: The new version to set
    required: true
  regex:
    description: The regex to use to match the version
    required: false
    default: '[0-9]*\.[0-9]*\.[0-9]*'

runs:
  using: composite
  steps:
    - name: Check for JavaScript
      if: hashFiles('package.json') != ''
      shell: bash
      run: |
        echo "JavaScript detected..."
        file="package.json"
        sed -i "s/\"version\": \"${{ inputs.regex }}\"/\"version\": \"${{ inputs.version }}\"/" $file
        echo "Updating $file..."

    - name: Check for .NET
      if: hashFiles('*.csproj') != ''
      shell: bash
      run: |
        echo ".NET detected..."
        files="*.csproj"
        for file in $files; do
          [ -e "$file" ] || continue
          sed -i 's|<Version>${{ inputs.regex }}</Version>|<Version>'${{ inputs.version }}'</Version>|' "$file"
          echo "Updating $file..."
        done

    - name: Check for .NET
      if: hashFiles('Directory.Build.props') != ''
      shell: bash
      run: |
        echo ".NET detected..."
        file="Directory.Build.props"
        sed -i 's|<Version>${{ inputs.regex }}</Version>|<Version>'${{ inputs.version }}'</Version>|' $file
        echo "Updating $file..."

    - name: Check for Python
      if: hashFiles('setup.py') != ''
      shell: bash
      run: |
        echo "Python detected..."
        file="setup.py"
        sed -i "s/version='${{ inputs.regex }}'/version='${{ inputs.version }}'/" $file
        echo "Updating $file..."

    - name: Check for Python
      if: hashFiles('pyproject.toml') != ''
      shell: bash
      run: |
        echo "Python detected..."
        file="pyproject.toml"
        sed -i 's/^version = "${{ inputs.regex }}"/version = "'${{ inputs.version }}'"/' $file
        echo "Updating $file..."

    - name: Check for Java
      if: hashFiles('build.gradle') != ''
      shell: bash
      run: |
        echo "Java detected..."
        file="build.gradle"
        sed -i 's/version = "${{ inputs.regex }}"/version = "'${{ inputs.version }}'"/' $file
        echo "Updating $file..."

    - name: Check for Kotlin
      if: hashFiles('build.gradle.kts') != ''
      shell: bash
      run: |
        echo "Kotlin detected..."
        file="build.gradle.kts"
        sed -i 's/version = "${{ inputs.regex }}"/version = "'${{ inputs.version }}'"/' $file
        echo "Updating $file..."

    - name: Commit and Push Changes
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        if ! git diff-index --quiet HEAD; then
          git commit -m "Bump version to ${{ inputs.version }}"
          git push -u origin HEAD
        else
          echo "No changes detected, skipping commit..."
        fi
