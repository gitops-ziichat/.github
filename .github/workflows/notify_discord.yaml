name: Notify PR Events to Discord

on:
  workflow_call:
    inputs:
      deployment_status:
        required: false
        type: string
        default: ""
      tests_passed:
        required: false
        type: string
        default: ""
    secrets:
      discord_webhook:
        required: true

jobs:
  notify:
    name: Send Discord Notification
    runs-on: ubuntu-latest
    steps:
      - name: Set Metadata
        id: meta
        run: |
          ACTION="${{ github.event.action }}"
          MERGED="${{ github.event.pull_request.merged || 'false' }}"
          if [[ "$ACTION" == "opened" ]]; then
            echo "color=3066993" >> $GITHUB_OUTPUT
            echo "role=1195734967294914591" >> $GITHUB_OUTPUT
            echo "status=ðŸŸ¢ Opened" >> $GITHUB_OUTPUT
          elif [[ "$ACTION" == "closed" && "$MERGED" == "true" ]]; then
            echo "color=10181046" >> $GITHUB_OUTPUT
            echo "role=1195734967294914592" >> $GITHUB_OUTPUT
            echo "status=ðŸŸ£ Merged" >> $GITHUB_OUTPUT
          else
            echo "color=15158332" >> $GITHUB_OUTPUT
            echo "role=1195734967294914590" >> $GITHUB_OUTPUT
            echo "status=ðŸ”´ Closed or Failed" >> $GITHUB_OUTPUT
          fi

      - name: Send Discord Webhook
        env:
          DISCORD_WEBHOOK: ${{ secrets.discord_webhook }}
        run: |
          curl -X POST "$DISCORD_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg content "<@&${{ steps.meta.outputs.role }}>" \
              --argjson embed "$(jq -n \
                --arg title "ðŸ“£ PR #${{ github.event.pull_request.number }} â€“ ${{ steps.meta.outputs.status }}" \
                --arg author "${{ github.event.pull_request.user.login }}" \
                --arg branch "${{ github.event.pull_request.head.ref }} â†’ ${{ github.event.pull_request.base.ref }}" \
                --arg url "${{ github.event.pull_request.html_url }}" \
                --arg deploy "${{ inputs.deployment_status }}" \
                --arg test "${{ inputs.tests_passed }}" \
                --argjson color "${{ steps.meta.outputs.color }}" \
                '{
                  "title": $title,
                  "color": $color,
                  "fields": [
                    { "name": "ðŸ‘¤ Author", "value": $author, "inline": true },
                    { "name": "ðŸ”€ Branch", "value": $branch, "inline": true },
                    { "name": "ðŸ§ª Tests", "value": $test, "inline": true },
                    { "name": "ðŸš€ Deployment", "value": $deploy },
                    { "name": "ðŸ”— View PR", "value": $url }
                  ]
                }')" \
              '{
                "content": $content,
                "embeds": [$embed],
                "username": "GitHub PR Bot",
                "avatar_url": "https://octodex.github.com/images/mona-the-rivetertocat.png"
              }')"
